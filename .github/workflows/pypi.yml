name: pypi

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        python-version-minor:
          - '9'
          - '10'
          - '11'
          - '12'
          - '13'
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.${{ matrix.python-version-minor }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter python3.${{ matrix.python-version-minor }} --manifest-path ./python/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}-3${{ matrix.python-version-minor }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        python-version-minor:
          - '9'
          - '10'
          - '11'
          - '12'
          - '13'
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.${{ matrix.python-version-minor }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter python3.${{ matrix.python-version-minor }} --manifest-path ./python/Cargo.toml
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}-3${{ matrix.python-version-minor }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        python-version-minor:
          - '9'
          - '10'
          - '11'
          - '12'
          - '13'
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.${{ matrix.python-version-minor }}
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter python3.${{ matrix.python-version-minor }} --manifest-path ./python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}-3${{ matrix.python-version-minor }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        python-version-minor:
          - '9'
          - '10'
          - '11'
          - '12'
          - '13'
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version-minor }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter python3.${{ matrix.python-version-minor }} --manifest-path ./python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}-3${{ matrix.python-version-minor }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path ./python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          # Using test.pypi until confirmed to work:
          args: --non-interactive --skip-existing wheels-*/* --repository-url https://test.pypi.org/legacy/
